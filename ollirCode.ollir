import io;
Lazysort {
	.field private field1.i32;

	.construct Lazysort().V {
		invokespecial(this, "<init>").V;
	}

	.method public static main(args.array.String).V  {
		
		lazy.Lazysort :=.Lazysort new(Lazysort).Lazysort;
		invokespecial(lazy.Lazysort, "<init>").V;
		
		b.i32 :=.i32 1.i32;
		
		invokestatic(io, "println", b.i32).V;
		
		b.i32 :=.i32 invokevirtual(lazy.Lazysort, "index", 1.i32).i32;
	}

	.method public index(parametro.i32).i32 {
		
		b.i32 :=.i32 0.i32 -.i32 2.i32;
		
		c.i32 :=.i32 invokevirtual(this, "add", 1.i32, b.i32).i32;
		
		ret.i32 c.i32;
	}

	.method public add(a.i32, b.i32).i32 {
		
		result.i32 :=.i32 $1.a.i32 +.i32 $2.b.i32;
		
		ret.i32 result.i32;
	}

}